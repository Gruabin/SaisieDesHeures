# PHP as Linux Web App on Azure
trigger:
  - Test-Slot

variables:
  azureSubscription: "app-azuredevops-groupegruau-pipelines-prd"
  azureTstSubscription: "app-azuredevops-groupegruau-pipelines-tst"
  webAppName: "app-gruau-prd-test-slot"
  vmImageName: "ubuntu-latest"
  environmentName: "app-gruau-prd-test-slot"
  rgName: "rg-prd-webapps"
  slotName: "preprod"
  rootFolder: $(System.DefaultWorkingDirectory)
  sshPort: 55200

stages:
  - stage: Build
    displayName: Build stage
    variables:
      phpVersion: "8.2"
    jobs:
      - job: BuildJob
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              sudo update-alternatives --set php /usr/bin/php$(phpVersion)
              sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
              sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
              sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
              sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
              php -version
            displayName: "Use PHP version $(phpVersion)"

          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(rootFolder)"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            displayName: "Upload package"
            artifact: drop

  - stage: Deploy
    displayName: "Deploy Web App"
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeploymentJob
        pool:
          vmImage: $(vmImageName)
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
              - task: AzureCLI@2
                displayName: "DÃ©ploiement rapide avec ZIP Deploy"
                inputs:
                  azureSubscription: '$(azureSubscription)'
                  scriptType: 'pscore'
                  scriptLocation: 'inlineScript'
                  inlineScript: |
                    az webapp deployment source config-zip --resource-group $(rgName) --name $(webAppName) --slot $(slotName) --src "$(Pipeline.Workspace)/drop/$(Build.BuildId).zip"

              - task: AzureCLI@2
                displayName: "Create Remote Connection"
                inputs:
                  azureSubscription: '$(azureSubscription)'
                  scriptType: 'bash'
                  scriptLocation: 'inlineScript'
                  inlineScript: |
                    nohup az webapp create-remote-connection --subscription $(azureSubscription) --resource-group $(rgName) -n $(webAppName) -s $(slotName) -p $(sshPort) > connection.log 2>&1 &
                    sleep 60  # Wait for connection to establish

              - task: AzureCLI@2
                displayName: "Install dependencies on the webapp via SSH"
                inputs:
                  azureSubscription: '$(azureSubscription)'
                  scriptType: 'bash'
                  scriptLocation: 'inlineScript'
                  inlineScript: |
                    sshpass -p "Docker!" ssh -o StrictHostKeyChecking=no root@127.0.0.1 -p $(sshPort) << EOF
                    cd /home/site/wwwroot &&
                    composer install --no-ansi --no-interaction --no-progress --prefer-dist --no-scripts &&
                    npm ci &&
                    npm run build &&
                    php bin/console cache:clear --no-warmup
                    EOF