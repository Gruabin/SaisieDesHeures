# PHP as Linux Web App on Azure
# Build, package and deploy your PHP project to Azure Linux Web App.
# Add steps that run tests and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger:
- prod

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'app-azuredevops-groupegruau-pipelines-prd'

  # Web app name
  webAppName: 'app-prd-saisie-heures'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'app-prd-saisie-heures'

  # Root folder under which your composer.json file is available.
  rootFolder: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  variables:
    phpVersion: '8.0'
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        sudo update-alternatives --set php /usr/bin/php$(phpVersion)
        sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
        sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
        sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
        sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
        php -version
      workingDirectory: $(rootFolder)
      displayName: 'Use PHP version $(phpVersion)'

    - script: composer install --no-ansi --no-interaction --no-plugins --no-progress --no-scripts --optimize-autoloader --prefer-dist
      workingDirectory: $(rootFolder)
      displayName: 'Composer install'

    # Install the JavaScript packages with Yarn
    - script: yarn install
      workingDirectory: $(rootFolder)
      displayName: "Run yarn install"
    
    # Install the Symfony CLI to test for requirements
    - script: curl -sS https://get.symfony.com/cli/installer | bash
      workingDirectory: $(rootFolder)
      displayName: "Install SymfonyCLI"

    # Check for requirements
    - script: /home/vsts/.symfony5/bin/symfony check:requirements
      workingDirectory: $(rootFolder)
      displayName: "Symfony - Check requirements"
      
    # Build JavaScript assets
    - script: yarn build
      workingDirectory: $(rootFolder)
      displayName: "Build JS assets"
      
    # Generate cache file structure
    - script: composer dump-autoload --classmap-authoritative
      workingDirectory: $(rootFolder)
      displayName: "Generate cache file structure" 

    # Clear cache
    - script: php bin/console cache:clear
      workingDirectory: $(rootFolder)
      displayName: "Clear cache" 
      
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(rootFolder)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : app-prd-TEMPLATE'
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: /home/site/wwwroot/startup.sh